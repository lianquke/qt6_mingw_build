name: Qt mingw64 build CI

on:
  push:
    branches: [ "main" ]

  workflow_dispatch:

jobs:

  # from https://github.com/niXman/mingw-builds-binaries/blob/main/.github/workflows/build.yml
  # split-tag:
  #   runs-on: ubuntu-latest
  #   outputs:
  #     gcc-version: ${{ steps.get-gcc-version.outputs.version }}
  #     rt-version: ${{ steps.get-rt-version.outputs.version }}
  #     mingw-rev: ${{ steps.get-mingw-revision.outputs.rev }}
  #   steps:
  #     - id: get-gcc-version
  #       run: echo "version=$(echo ${{ github.ref_name }} | cut -d- -f1)" >> $GITHUB_OUTPUT
  #     - id: get-rt-version
  #       run: echo "version=$(echo ${{ github.ref_name }} | cut -d- -f2 | cut -c4-)" >> $GITHUB_OUTPUT
  #     - id: get-mingw-revision
  #       run: echo "rev=$(echo ${{ github.ref_name }} | cut -d- -f3 | cut -c4-)" >> $GITHUB_OUTPUT

  split-tag:
    runs-on: ubuntu-latest
    outputs:
      clang-version: ${{ steps.get-clang-version.outputs.version }}
 
    steps:
      - id: get-clang-version
        run: echo "version=19.2.2" >> $GITHUB_OUTPUT
  


  build:
    needs: split-tag
    runs-on: windows-latest
    strategy:
      matrix:
        buildmode: [shared, static]

    steps:                  
      - uses: actions/checkout@v4
      - name: build Clang ${{ matrix.buildmode }}  
        shell: cmd
        run: call build_clang.bat ${{ needs.split-tag.outputs.clang-version }} MinGW-x86_64-13.1.0-release-posix-seh-ucrt-rt_v11-rev1 ${{ matrix.buildmode }}   

      - name: publish clang ${{ matrix.buildmode }}  build
        uses:  actions/upload-artifact@v4
        with:
          name: libclang_${{ needs.split-tag.outputs.clang-version }}_${{ matrix.buildmode }}.7z
          path: libclang.7z
          compression-level: 0 

  release:
      runs-on: windows-latest
      needs: build

      steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: 'libclang_${{ needs.split-tag.outputs.clang-version }}_${{ matrix.buildmode }}.7z'
          path: ./

      - name: Upload to Release
        id: upload_to_release
        uses: softprops/action-gh-release@v1
        with:
          files: "*.7z"
          tag_name: libclang_${{ needs.split-tag.outputs.clang-version }}


      # - name: Prepare GitHub Release artifacts
      #   run: |
      #     echo ::set-output name=FILE_NAME::libclang-static.7z >> $GITHUB_ENVIRONMENT_VARIABLES
      #     echo ::set-output name=RELEASE_TITLE::"Release libclang-static.7z"
      #     echo ::set-output name=RELEASE_DESCRIPTION::"Compiled Clang static library using GitHub Actions"

      #       - name: Create GitHub Release
      #         uses: actions/upload-artifact@v4
      #         with:
      #           name: "Release libclang-static.7z"
      #           path: libclang.7z
      
      # - name: Release Drafter
      #   uses: release-drafter/release-drafter@v6.0.0
      # - name: Checkout clazy
      #   uses: actions/checkout@v4
      #   with:
      #     repository: 'KDE/clazy'
      #     ref: 'v1.12'
      #     path: 'clazy'
  
      # - name: build Clazy
      #   uses: actions/checkout@v4
      #   shell: cmd
      #   run: call run.bat clazy  
          
  # build_arm64:
  #   runs-on: windows-latest

  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Fetch dependencies and build Qt
  #       shell: cmd
  #       run: |
  #         set CI_ANDROID_ABI=arm64-v8a
  #         call run.bat release

  #     - name: Upload Qt
  #       uses: actions/upload-artifact@v3.1.3
  #       with:
  #         name: qt_release_mingw64_arm64-v8a.tar.gz
  #         path: qt_release_mingw64.tar.gz
          
  # build_armeabi:
  #   runs-on: windows-latest

  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Fetch dependencies and build Qt
  #       shell: cmd
  #       run: |
  #         set CI_ANDROID_ABI=armeabi-v7a
  #         call run.bat release

  #     - name: Upload Qt
  #       uses: actions/upload-artifact@v3.1.3
  #       with:
  #         name: qt_release_mingw64_armeabi-v7a.tar.gz
  #         path: qt_release_mingw64.tar.gz
          
  # build_x86_64:
  #   runs-on: windows-latest

  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Fetch dependencies and build Qt
  #       shell: cmd
  #       run: |
  #         set CI_ANDROID_ABI=x86_64
  #         call run.bat release

  #     - name: Upload Qt
  #       uses: actions/upload-artifact@v3.1.3
  #       with:
  #         name: qt_release_mingw64_x86_64.tar.gz
  #         path: qt_release_mingw64.tar.gz
          
  # build_x86:
  #   runs-on: windows-latest

  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Fetch dependencies and build Qt
  #       shell: cmd
  #       run: |
  #         set CI_ANDROID_ABI=x86
  #         call run.bat release

  #     - name: Upload Qt
  #       uses: actions/upload-artifact@v3.1.3
  #       with:
  #         name: qt_release_mingw64_x86.tar.gz
  #         path: qt_release_mingw64.tar.gz

      # - name: Upload Qt+Docs
      #   uses: actions/upload-artifact@v3.1.3
      #   with:
      #     name: qt_release_mingw64_with_docs.tar.gz
      #     path: qt_release_mingw64_with_docs.tar.gz

          
  # build_debug:
  #   runs-on: windows-latest

  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Fetch dependencies and build Qt
  #       shell: cmd
  #       run: call run.bat debug

  #     - name: Upload Qt
  #       uses: actions/upload-artifact@v3.1.3
  #       with:
  #         name: qt_debug_mingw64.tar.gz
  #         path: qt_debug_mingw64.tar.gz

      # - name: Upload Qt+Docs
      #   uses: actions/upload-artifact@v3.1.3
      #   with:
      #     name: qt_release_mingw64_with_docs.tar.gz
      #     path: qt_release_mingw64_with_docs.tar.gz
